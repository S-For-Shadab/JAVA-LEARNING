When we create interfaces with only one abstract method then we can us lamda expressions which can shortens line of codes

Example 1:
interface Lambda{
	public void demo(); 
}
 
public class App {
 
	public static void main(String[] args) {
		
		Lambda lambda = ()->{
			System.out.println("Statement 1");
			System.out.println("Statement 2");
		};
		lambda.demo();
		
	}
}

Example 2: 

class Data {
	private String name;

	public Data(String name) {
		super();
		this.name = name;
	}

	public String getName() {
		return name;
	}

	@Override
	public String toString() {
		return "Data [name=" + name + "]";
	}

}

public class App {

	public static void main(String[] args) {
		List<Data> list = new ArrayList<>();
		list.add(new Data("Chaand"));
		list.add(new Data("Ed"));
		list.add(new Data("Angelica"));
		list.add(new Data("Maqbul"));
		list.add(new Data("John"));

		Collections.sort(list, (Data o1, Data o2) -> {

			return o1.getName().compareTo(o2.getName());	
			});

		for (Data data : list) {
			System.out.println(data.getName());
		}

	}
}


